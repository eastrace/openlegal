%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.10.1 (Build 14B25) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 854 534
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 854 534
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.62003881 0.62003881 0.62003881 sc
q
0 0 853.33331 533.33331 rc
-46.028362 590.80634 m
-46.028362 590.80634 864.78217 590.80634 864.78217 590.80634 c
864.78217 590.80634 864.78217 -53.520477 864.78217 -53.520477 c
864.78217 -53.520477 -46.028362 -53.520477 -46.028362 -53.520477 c
-46.028362 -53.520477 -46.028362 590.80634 -46.028362 590.80634 c
h
f*
0 0.32499999 0.63099998 sc
73.650604 337.80585 m
44.441269 337.80585 24.968378 319.81821 24.968378 292.42413 c
24.968378 265.03006 44.441269 246.87737 73.650604 246.87737 c
102.69492 246.87737 122.16781 265.03006 122.16781 292.42413 c
122.16781 319.81821 102.69492 337.80585 73.650604 337.80585 c
h
73.650604 315.19751 m
85.36734 315.19751 93.453545 305.79111 93.453545 292.09409 c
93.453545 278.23203 85.36734 268.99066 73.650604 268.99066 c
61.768841 268.99066 53.68264 278.23203 53.68264 292.09409 c
53.68264 305.79111 61.768841 315.19751 73.650604 315.19751 c
h
f
183.60275 337.80585 m
172.38109 337.80585 163.30475 333.18518 157.03381 325.09897 c
157.03381 325.09897 157.03381 336.8157 157.03381 336.8157 c
157.03381 336.8157 128.48457 336.8157 128.48457 336.8157 c
128.48457 336.8157 128.48457 215.85277 128.48457 215.85277 c
128.48457 215.85277 157.03381 215.85277 157.03381 215.85277 c
157.03381 215.85277 157.03381 259.74927 157.03381 259.74927 c
163.30475 251.49805 172.71114 246.87737 184.26285 246.87737 c
209.18155 246.87737 225.35396 264.86502 225.35396 291.92905 c
225.35396 319.48813 208.68648 337.80585 183.60275 337.80585 c
h
176.67172 269.48572 m
165.12001 269.48572 157.03381 278.89212 157.03381 292.75418 c
157.03381 306.28619 165.12001 315.8576 176.67172 315.8576 c
188.5535 315.8576 196.63969 306.28619 196.63969 292.75418 c
196.63969 279.05713 188.5535 269.48572 176.67172 269.48572 c
h
f
276.20901 337.80585 m
248.64992 337.80585 229.83711 319.65317 229.83711 292.09409 c
229.83711 265.03006 247.98981 246.87737 277.03412 246.87737 c
293.37155 246.87737 306.73853 252.65323 315.81488 262.55469 c
315.81488 262.55469 300.79764 277.24188 300.79764 277.24188 c
294.85678 271.30099 287.26566 268.16553 279.50949 268.16553 c
268.94794 268.16553 261.35681 274.10641 258.55139 284.66797 c
258.55139 284.66797 321.09567 284.66797 321.09567 284.66797 c
323.07596 317.1778 307.56366 337.80585 276.20901 337.80585 c
h
258.0563 300.01526 m
259.87158 310.74185 266.63757 318.00293 276.53906 318.00293 c
286.77057 318.00293 293.7016 310.90686 293.7016 300.01526 c
293.7016 300.01526 258.0563 300.01526 258.0563 300.01526 c
h
f
385.00598 338.13593 m
371.80402 337.97089 361.57251 332.69009 355.30157 322.29355 c
355.30157 322.29355 355.30157 336.8157 355.30157 336.8157 c
355.30157 336.8157 326.75235 336.8157 326.75235 336.8157 c
326.75235 336.8157 326.75235 247.86751 326.75235 247.86751 c
326.75235 247.86751 355.30157 247.86751 355.30157 247.86751 c
355.30157 247.86751 355.30157 294.89951 355.30157 294.89951 c
356.45676 305.46106 363.05774 312.88718 373.45425 312.88718 c
383.0257 312.88718 389.13159 306.4512 389.13159 296.05466 c
389.13159 296.05466 389.13159 247.86751 389.13159 247.86751 c
389.13159 247.86751 417.51581 247.86751 417.51581 247.86751 c
417.51581 247.86751 417.51581 303.97583 417.51581 303.97583 c
417.51581 324.76892 404.64389 338.13593 385.00598 338.13593 c
h
f
1 1 1 sc
454.58215 247.86751 m
454.58215 247.86751 454.58215 370.31567 454.58215 370.31567 c
454.58215 370.31567 426.0329 370.31567 426.0329 370.31567 c
426.0329 370.31567 426.0329 247.86751 426.0329 247.86751 c
426.0329 247.86751 454.58215 247.86751 454.58215 247.86751 c
h
f
507.27078 337.80585 m
479.7117 337.80585 460.89893 319.65317 460.89893 292.09409 c
460.89893 265.03006 479.05161 246.87737 508.09592 246.87737 c
524.43335 246.87737 537.80035 252.65323 546.87665 262.55469 c
546.87665 262.55469 531.85944 277.24188 531.85944 277.24188 c
525.91858 271.30099 518.32745 268.16553 510.57129 268.16553 c
500.0097 268.16553 492.41858 274.10641 489.61316 284.66797 c
489.61316 284.66797 552.15747 284.66797 552.15747 284.66797 c
554.13776 317.1778 538.62543 337.80585 507.27078 337.80585 c
h
489.1181 300.01526 m
490.93338 310.74185 497.69937 318.00293 507.60083 318.00293 c
517.83234 318.00293 524.76337 310.90686 524.76337 300.01526 c
524.76337 300.01526 489.1181 300.01526 489.1181 300.01526 c
h
f
649.21936 336.8157 m
649.21936 336.8157 620.83514 336.8157 620.83514 336.8157 c
620.83514 336.8157 620.83514 325.9241 620.83514 325.9241 c
614.89429 333.68024 605.98297 337.97089 594.59625 337.80585 c
572.31793 337.80585 556.97064 320.97336 556.97064 295.72461 c
556.97064 269.81577 572.81305 252.65323 595.25635 252.65323 c
606.31299 252.65323 615.05927 256.94385 620.83514 264.53497 c
620.83514 264.53497 620.83514 255.12859 620.83514 255.12859 c
620.83514 244.07195 612.58392 236.81087 598.8869 236.81087 c
589.31549 236.81087 579.414 240.11136 571.32782 245.7222 c
571.32782 245.7222 561.42633 226.41432 561.42633 226.41432 c
571.4928 219.64833 585.5199 214.69759 601.03223 214.69759 c
629.74646 214.69759 649.21936 230.70497 649.21936 255.95372 c
649.21936 255.95372 649.21936 336.8157 649.21936 336.8157 c
h
602.35242 273.28128 m
591.13074 273.28128 583.53961 282.1926 583.53961 294.89951 c
583.53961 307.77139 591.13074 316.68274 602.35242 316.68274 c
613.40906 316.68274 620.83514 307.93643 620.83514 294.89951 c
620.83514 282.1926 613.40906 273.28128 602.35242 273.28128 c
h
f
701.08289 338.13593 m
686.23071 338.13593 673.68884 334.50537 659.82678 328.06943 c
659.82678 328.06943 667.91296 309.25662 667.91296 309.25662 c
677.3194 314.04233 687.05579 316.68274 694.48193 316.68274 c
706.03363 316.68274 711.80951 311.40195 711.80951 302.65564 c
711.80951 302.65564 711.80951 301.33545 711.80951 301.33545 c
711.80951 301.33545 688.37604 301.33545 688.37604 301.33545 c
666.26276 301.17041 654.21594 291.26895 654.21594 274.43646 c
654.21594 258.09903 665.76764 246.54732 684.74548 246.54732 c
696.79224 246.54732 706.19867 250.5079 711.97449 258.09903 c
711.97449 258.09903 711.97449 247.86751 711.97449 247.86751 c
711.97449 247.86751 739.86365 247.86751 739.86365 247.86751 c
739.86365 247.86751 739.86365 305.95615 739.86365 305.95615 c
739.69861 326.08911 725.50653 338.13593 701.08289 338.13593 c
h
693.49176 265.85519 m
685.57062 265.85519 680.94989 269.9808 680.94989 276.41675 c
680.94989 283.01773 685.24054 285.98816 693.82184 285.98816 c
693.82184 285.98816 711.80951 285.98816 711.80951 285.98816 c
711.80951 285.98816 711.80951 278.06699 711.80951 278.06699 c
709.9942 270.80591 702.40308 265.85519 693.49176 265.85519 c
h
f
779.68042 247.86751 m
779.68042 247.86751 779.68042 370.31567 779.68042 370.31567 c
779.68042 370.31567 751.13116 370.31567 751.13116 370.31567 c
751.13116 370.31567 751.13116 247.86751 751.13116 247.86751 c
751.13116 247.86751 779.68042 247.86751 779.68042 247.86751 c
h
f
782.90753 353.37198 m
782.90753 353.37198 787.3576 353.37198 787.3576 353.37198 c
787.3576 353.37198 787.3576 339.74838 787.3576 339.74838 c
787.3576 339.74838 789.89429 339.74838 789.89429 339.74838 c
789.89429 339.74838 789.89429 353.37198 789.89429 353.37198 c
789.89429 353.37198 794.47559 353.37198 794.47559 353.37198 c
794.47559 353.37198 794.47559 355.75558 794.47559 355.75558 c
794.47559 355.75558 782.90753 355.75558 782.90753 355.75558 c
782.90753 355.75558 782.90753 353.37198 782.90753 353.37198 c
h
f
795.99213 339.74838 m
795.99213 339.74838 798.5058 339.74838 798.5058 339.74838 c
798.5058 339.74838 799.42645 351.30222 799.42645 351.30222 c
799.42645 351.30222 802.67383 339.74838 802.67383 339.74838 c
802.67383 339.74838 805.45319 339.74838 805.45319 339.74838 c
805.45319 339.74838 808.59235 351.30222 808.59235 351.30222 c
808.59235 351.30222 809.61462 339.74838 809.61462 339.74838 c
809.61462 339.74838 812.12836 339.74838 812.12836 339.74838 c
812.12836 339.74838 810.72772 355.75558 810.72772 355.75558 c
810.72772 355.75558 807.22559 355.75558 807.22559 355.75558 c
807.22559 355.75558 804.034 343.95355 804.034 343.95355 c
804.034 343.95355 800.78772 355.75558 800.78772 355.75558 c
800.78772 355.75558 797.27136 355.75558 797.27136 355.75558 c
797.27136 355.75558 795.99213 339.74838 795.99213 339.74838 c
h
f
0.61960787 0.61960787 0.61960787 sc
157.9146 215.17635 m
157.9146 215.17635 157.9146 215.17076 157.9146 215.17076 c
157.9146 215.17076 127.85932 215.17076 127.85932 215.17076 c
127.85932 215.17076 127.85932 228.78102 127.85932 228.78102 c
127.85932 228.78102 157.9146 215.17635 157.9146 215.17635 c
h
f*
455.2298 355.37228 m
455.2298 355.37228 425.46432 368.84579 425.46432 368.84579 c
425.46432 368.84579 425.46432 370.50562 425.46432 370.50562 c
425.46432 370.50562 455.2298 370.50562 455.2298 370.50562 c
455.2298 370.50562 455.2298 355.37228 455.2298 355.37228 c
h
f*
780.28064 357.20468 m
780.28064 357.20468 750.52435 370.67404 750.52435 370.67404 c
750.52435 370.67404 750.52435 372.33334 750.52435 372.33334 c
750.52435 372.33334 780.28064 372.33334 780.28064 372.33334 c
780.28064 372.33334 780.28064 357.20468 780.28064 357.20468 c
h
f*
ep
end
%%Trailer
%%EOF
